# Generated by Django 3.2.13 on 2022-06-06 23:02

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import isbn_field.fields
import isbn_field.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Name')),
                ('year_of_birth', models.CharField(blank=True, max_length=10, null=True, verbose_name='Year of birth')),
                ('year_of_death', models.CharField(blank=True, max_length=10, null=True, verbose_name='Year of death')),
                ('pha', models.PositiveIntegerField(blank=True, null=True, verbose_name='PHA')),
                ('pha_label', models.CharField(blank=True, max_length=10, null=True, verbose_name='PHA Label')),
                ('observation', models.TextField(blank=True, null=True, verbose_name='Observation')),
            ],
            options={
                'verbose_name': 'Author',
                'verbose_name_plural': 'Authors',
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isbn', isbn_field.fields.ISBNField(blank=True, max_length=28, null=True, validators=[isbn_field.validators.ISBNValidator], verbose_name='ISBN')),
                ('title', models.CharField(max_length=1024, verbose_name='Title')),
                ('volume', models.CharField(blank=True, max_length=100, null=True, verbose_name='Volume')),
                ('edition', models.PositiveIntegerField(blank=True, null=True, verbose_name='Edition')),
                ('local', models.CharField(blank=True, max_length=100, null=True, verbose_name='Local')),
                ('year', models.IntegerField(blank=True, null=True, verbose_name='Year')),
                ('page_count', models.CharField(blank=True, max_length=50, null=True, verbose_name='Page count')),
                ('pha', models.CharField(blank=True, max_length=50, null=True, verbose_name='PHA')),
                ('authors', models.ManyToManyField(to='books.Author', verbose_name='Authors')),
            ],
            options={
                'verbose_name': 'Book',
                'verbose_name_plural': 'Books',
            },
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Collection',
                'verbose_name_plural': 'Collections',
            },
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Publisher',
                'verbose_name_plural': 'Publishers',
            },
        ),
        migrations.CreateModel(
            name='Reader',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('document', models.CharField(max_length=255, verbose_name='Document')),
                ('contact', models.CharField(max_length=255, verbose_name='Contact')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='Birthday')),
                ('observation', models.TextField(blank=True, verbose_name='Observation')),
            ],
            options={
                'verbose_name': 'Reader',
                'verbose_name_plural': 'Readers',
            },
        ),
        migrations.CreateModel(
            name='Shelf',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ddc', models.CharField(blank=True, max_length=10, null=True, verbose_name='DDC')),
                ('description', models.CharField(max_length=1024, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Subject',
                'verbose_name_plural': 'Subjects',
            },
        ),
        migrations.CreateModel(
            name='Translator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Translator',
                'verbose_name_plural': 'Translators',
            },
        ),
        migrations.CreateModel(
            name='PhysicalBook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('physical_id', models.PositiveIntegerField(unique=True, verbose_name='Physical ID')),
                ('observations', models.TextField(blank=True, max_length=2048, null=True, verbose_name='Observations')),
                ('status', models.CharField(choices=[('circulant', 'Circulant'), ('archived', 'Archived'), ('lost_by_user', 'Downed / Lost by user'), ('defective', 'Downed / Defective book'), ('not_circulant', 'Not circulant')], default='circulant', max_length=255, verbose_name='Status')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='books.book', verbose_name='Book')),
                ('shelf', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='books.shelf', verbose_name='Subject')),
            ],
            options={
                'verbose_name': 'Physical Book',
                'verbose_name_plural': 'Physical Books',
            },
        ),
        migrations.CreateModel(
            name='Borrow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_borrow', models.DateField(default=django.utils.timezone.now, verbose_name='Date borrow')),
                ('date_return', models.DateField(blank=True, null=True, verbose_name='Date return')),
                ('renew_count', models.PositiveIntegerField(default=0, verbose_name='Renew count')),
                ('observation', models.TextField(blank=True, null=True, verbose_name='Observation')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='books.physicalbook', verbose_name='Book')),
                ('reader', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='books.reader', verbose_name='Reader')),
            ],
            options={
                'verbose_name': 'Borrow',
                'verbose_name_plural': 'Borrows',
            },
        ),
        migrations.AddField(
            model_name='book',
            name='collection',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='books.collection', verbose_name='Collection'),
        ),
        migrations.AddField(
            model_name='book',
            name='publisher',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='books.publisher', verbose_name='Publisher'),
        ),
        migrations.AddField(
            model_name='book',
            name='translators',
            field=models.ManyToManyField(blank=True, to='books.Translator', verbose_name='Translators'),
        ),
    ]
